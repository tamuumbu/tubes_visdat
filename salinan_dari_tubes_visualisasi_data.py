# -*- coding: utf-8 -*-
"""Salinan dari Tubes Visualisasi Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e5EdKyCTIlgbG7NlJA5WTVVKrYcQSW1s
"""

pip install matplotlib

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

import matplotlib as mpl
import matplotlib.pyplot as plt
import pandas as pd
import plotly.express as px
import seaborn as sns

mpl.style.use('ggplot')

"""# Eksplorasi Data

Membaca dataset
"""

data = pd.read_csv("https://raw.githubusercontent.com/nurhidayahputeri/FinalProject/main/Dataset/saham.csv")
data.head()

data.info()

df = data.dropna()

"""Menghapus kolom yang tidak diperlukan"""

df = df.drop(columns=['Shares',
                      'ListingBoard',
                      'MinutesFirstAdded',
                      'MinutesLastUpdated',
                      'HourlyFirstAdded',
                      'HourlyLastUpdated',
                      'DailyFirstAdded',
                      'DailyLastUpdated'])

df.head()

"""Mengubah tipe data 'ListingDate' menjadi datetime"""

df['ListingDate'] = pd.to_datetime(df['ListingDate'])
df = df.sort_values('ListingDate')
df.dtypes

print('Dimensi data:', df.shape)

df.describe()

"""DISTRIBUSI HARGA SAHAM"""

df['LastPrice'].plot(kind='hist', alpha=0.35, bins=15, figsize=(14, 8))
plt.title('Distribusi Harga Saham')
plt.xlabel('Harga Saham')
plt.ylabel('Frekuensi')
plt.show();

"""Perbandingan MarketCap dan Sector"""

fig, ax1 = plt.subplots(figsize=(12, 6))

df.groupby('Sector')['MarketCap'].sum().plot(kind='line', ax=ax1)
ax1.set_title('Perbandingan Kapitalisasi Pasar antar-Sektor')
ax1.set_xlabel('Sektor')
ax1.set_ylabel('Kapitalisasi Pasar')

plt.tight_layout()
plt.show()

#grafik garis interaktif
fig = px.line(df, x='ListingDate', y='LastPrice', title='Perubahan Harga Saham dari Waktu ke Waktu')

fig.update_layout(
    title={
        'y':0.9,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top'},
)
fig.show()

correlation = df.corr(numeric_only=True)

# Membuat peta panas korelasi menggunakan Seaborn
plt.figure(figsize=(10, 8))  # Ukuran plot
sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Peta Panas Korelasi Antar Variabel')
plt.show()

fig = px.scatter(df, x="ListingDate", y="LastPrice", color="Sector", hover_name="Name")
fig.show()

# Pastikan 'ListingDate' merupakan tipe data datetime
df['ListingDate'] = pd.to_datetime(df['ListingDate'])

# Urutkan DataFrame berdasarkan 'ListingDate'
df = df.sort_values('ListingDate')

# Konversi kolom 'ListingDate' menjadi string untuk penggunaan sebagai animation_frame
df['ListingDate'] = df['ListingDate'].astype(str)

# Buat scatter plot animasi
fig = px.scatter(df,
                 x="ListingDate",
                 y="LastPrice",
                 color="Sector",
                 hover_name="Name",
                 animation_frame="ListingDate",
                 animation_group="Name",
                 size="LastPrice",
                 size_max=55,
                 range_y=[df['LastPrice'].min(), df['LastPrice'].max()],
                 title="Perubahan Harga Terakhir Berdasarkan Tanggal Listing",
                 labels={"ListingDate": "Tanggal Listing", "LastPrice": "Harga Terakhir"}
)

# Tambahkan informasi tambahan
fig.update_layout(
    showlegend=True,
    legend_title="Sektor",
)

# Atur tata letak dan tampilan
fig.update_layout(
    xaxis=dict(title="Tanggal Listing"),
    yaxis=dict(title="Harga Terakhir"),
    transition=dict(duration=500),
)

# Tampilkan plot
fig.show()
